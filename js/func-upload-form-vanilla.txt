function uploadForm(e) {
    var form = e.closest('form').id;
    var submitButton = document.querySelector('#' + form + ' [type="submit"]');
    var submitButtonText = submitButton.textContent;
    var submitButtonProgressText = submitButton.getAttribute('data-progress-text') || 'Sending...';
    var progress = document.querySelector('#' + form + ' .an-submit-progress');
    var progressBar = progress.querySelector('.an-submit-progress-bar');
    var alert = document.querySelector('.alert-an-form#alert-' + form);
    var successMessage = document.querySelector('#' + form).getAttribute('data-success-message') || 'Thank you for your submission!';
    var errorMessage = document.querySelector('#' + form).getAttribute('data-error-message') || 'Something went wrong, please try again!';

    // Function to handle the form submit with validation
    function handleSubmit(event) {
        event.preventDefault();

        submitButton.disabled = true;
        submitButton.innerHTML = '<span class="an-loading-icon" role="status" aria-hidden="true">' + submitButtonProgressText + '</span>';
        progress.removeAttribute('hidden');
        progressBar.style.width = '0%';

        var checkRequired = document.querySelector('#' + form + ' .form-check-required');
        var checkRequiredInputs = checkRequired ? checkRequired.querySelectorAll('input[type="checkbox"]') : [];
        var checkRequiredName = checkRequiredInputs.length ? checkRequiredInputs[0].name : '';
        var checkRequiredChecked = checkRequiredName ? document.querySelectorAll('#' + form + ' .form-check-required input[type="checkbox"][name="' + checkRequiredName + '"]:checked').length : 0;

        if (checkRequired && checkRequiredChecked === 0) {
            checkRequired.classList.add('is-invalid');
            var minCheck = checkRequired.getAttribute('data-min-check') || '1';
            var invalidFeedback = checkRequired.querySelector('.invalid-feedback') || document.createElement('div');
            invalidFeedback.className = 'invalid-feedback';
            invalidFeedback.textContent = `Please select min. ${minCheck} option(s)!`;
            checkRequired.appendChild(invalidFeedback);

            alert.textContent = errorMessage;
            progressBar.style.width = '50%';
            alert.removeAttribute('hidden');
            alert.classList.add('an-alert-danger');

            setTimeout(function () {
                progressBar.style.width = '0%';
                alert.style.display = 'none';
                alert.setAttribute('hidden', true);
                alert.classList.remove('an-alert-danger');
                progress.setAttribute('hidden', true);
                submitButton.disabled = false;
                submitButton.innerHTML = submitButtonText;
            }, 3000);

            return false;
        }

        if (document.querySelector('#' + form + ' input[name="bot"]').value !== '') {
            alert.innerHTML = '<strong><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" style="fill: currentColor;"><path d="M21.928 11.607c-.202-.488-.635-.605-.928-.633V8c0-1.103-.897-2-2-2h-6V4.61c.305-.274.5-.668.5-1.11a1.5 1.5 0 0 0-3 0c0 .442.195.836.5 1.11V6H5c-1.103 0-2 .897-2 2v2.997l-.082.006A1 1 0 0 0 1.99 12v2a1 1 0 0 0 1 1H3v5c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5a1 1 0 0 0 1-1v-1.938a1.006 1.006 0 0 0-.072-.455zM5 20V8h14l.001 3.996L19 12v2l.001.005.001 5.995H5z"></path><ellipse cx="8.5" cy="12" rx="1.5" ry="2"></ellipse><ellipse cx="15.5" cy="12" rx="1.5" ry="2"></ellipse><path d="M8 16h8v2H8z"></path></svg> BOT DETECTED!</strong>';
            progressBar.style.width = '50%';
            alert.removeAttribute('hidden');
            alert.classList.add('an-alert-danger');

            setTimeout(function () {
                progressBar.style.width = '0%';
                alert.style.display = 'none';
                alert.setAttribute('hidden', true);
                alert.classList.remove('an-alert-danger');
                progress.setAttribute('hidden', true);
                submitButton.disabled = false;
                submitButton.innerHTML = submitButtonText;
            }, 3000);

            return false;
        }

        // Create a FormData object and submit it via XMLHttpRequest
        var formData = new FormData(document.getElementById(form));
        var xhr = new XMLHttpRequest();

        xhr.upload.addEventListener('progress', function (e) {
            if (e.lengthComputable) {
                var percentComplete = (e.loaded / e.total) * 100;
                progressBar.style.width = percentComplete + '%';
            }
        });

        xhr.onreadystatechange = function () {
            if (xhr.readyState === 4) {
                submitButton.disabled = false;
                submitButton.innerHTML = submitButtonText;
                progressBar.style.width = '0%';
                progress.setAttribute('hidden', true);

                if (xhr.status === 200) {
                    alert.innerHTML = successMessage;
                    alert.removeAttribute('hidden');
                    alert.classList.add('an-alert-success');

                    setTimeout(function () {
                        alert.style.display = 'none';
                        alert.setAttribute('hidden', true);
                        alert.classList.remove('an-alert-success');

                        document.getElementById(form).reset();
                        document.querySelectorAll('#' + form + ' .is-invalid').forEach(function (el) {
                            el.classList.remove('is-invalid');
                        });
                        document.querySelectorAll('#' + form + ' .is-valid').forEach(function (el) {
                            el.classList.remove('is-valid');
                        });
                        document.querySelector('#' + form + ' .an-droppable-msg').textContent = 'or drop files here';
                        document.querySelector('#' + form + ' .an-droppable-item-delete').style.display = 'none';
                        document.getElementById(form).classList.remove('was-validated');
                    }, 3000);
                } else {
                    alert.innerHTML = errorMessage;
                    alert.removeAttribute('hidden');
                    alert.classList.add('an-alert-danger');

                    setTimeout(function () {
                        alert.style.display = 'none';
                        alert.setAttribute('hidden', true);
                        alert.classList.remove('an-alert-danger');
                    }, 3000);
                }
            }
        };

        xhr.open('POST', document.getElementById(form).action, true);
        xhr.send(formData);
    }

    document.getElementById(form).addEventListener('submit', handleSubmit);
}
