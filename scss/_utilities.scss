// Utilities

$utilities: () !default;
// stylelint-disable-next-line scss/dollar-variable-default
$utilities: map-merge(
  (
    // scss-docs-start utils-vertical-align
    "align": (
      property: vertical-align,
      class: align,
      values: baseline top middle bottom text-bottom text-top
    ),
    // scss-docs-end utils-vertical-align
    // scss-docs-start utils-float
    "float": (
      responsive: true,
      property: float,
      values: (
        start: left,
        end: right,
        none: none,
      )
    ),
    // scss-docs-end utils-float
    // Object Fit utilities
    // scss-docs-start utils-object-fit
    "object-fit": (
      responsive: true,
      property: object-fit,
      values: (
        contain: contain,
        cover: cover,
        fill: fill,
        scale: scale-down,
        none: none,
      )
    ),
    // scss-docs-end utils-object-fit
    // Opacity utilities
    // scss-docs-start utils-opacity
    "opacity": (
      responsive: true,
      property: opacity,
      values: (
        0: 0,
        25: .25,
        50: .5,
        75: .75,
        100: 1,
      )
    ),
    // scss-docs-end utils-opacity
    // scss-docs-start utils-overflow
    "overflow": (
      responsive: true,
      property: overflow,
      values: auto hidden visible scroll,
    ),
    "overflow-x": (
      responsive: true,
      property: overflow-x,
      values: auto hidden visible scroll,
    ),
    "overflow-y": (
      responsive: true,
      property: overflow-y,
      values: auto hidden visible scroll,
    ),
    // scss-docs-end utils-overflow
    // scss-docs-start utils-display
    "display": (
      responsive: true,
      print: true,
      property: display,
      class: d,
      values: inline inline-block block inline-grid grid table table-row table-cell flex inline-flex none
    ),
    // scss-docs-end utils-display
    // scss-docs-start utils-shadow
    "shadow": (
      property: box-shadow,
      class: shadow,
      state: hover,
      values: (
        null: $box-shadow,
        sm: $box-shadow-sm,
        md: $box-shadow-md,
        lg: $box-shadow-lg,
        primary: $box-shadow-primary,
        primary-sm: $box-shadow-sm-primary,
        primary-md: $box-shadow-md-primary,
        primary-lg: $box-shadow-lg-primary,
        secondary: $box-shadow-secondary,
        secondary-sm: $box-shadow-sm-secondary,
        secondary-md: $box-shadow-md-secondary,
        secondary-lg: $box-shadow-lg-secondary,
        tertiary: $box-shadow-tertiary,
        tertiary-sm: $box-shadow-sm-tertiary,
        tertiary-md: $box-shadow-md-tertiary,
        tertiary-lg: $box-shadow-lg-tertiary,
        info: $box-shadow-info,
        info-sm: $box-shadow-sm-info,
        info-md: $box-shadow-md-info,
        info-lg: $box-shadow-lg-info,
        success: $box-shadow-success,
        success-sm: $box-shadow-sm-success,
        success-md: $box-shadow-md-success,
        success-lg: $box-shadow-lg-success,
        warning: $box-shadow-warning,
        warning-sm: $box-shadow-sm-warning,
        warning-md: $box-shadow-md-warning,
        warning-lg: $box-shadow-lg-warning,
        danger: $box-shadow-danger,
        danger-sm: $box-shadow-sm-danger,
        danger-md: $box-shadow-md-danger,
        danger-lg: $box-shadow-lg-danger,
        blue: $box-shadow-blue,
        blue-sm: $box-shadow-sm-blue,
        blue-md: $box-shadow-md-blue,
        blue-lg: $box-shadow-lg-blue,
        indigo: $box-shadow-indigo,
        indigo-sm: $box-shadow-sm-indigo,
        indigo-md: $box-shadow-md-indigo,
        indigo-lg: $box-shadow-lg-indigo,
        purple: $box-shadow-purple,
        purple-sm: $box-shadow-sm-purple,
        purple-md: $box-shadow-md-purple,
        purple-lg: $box-shadow-lg-purple,
        pink: $box-shadow-pink,
        pink-sm: $box-shadow-sm-pink,
        pink-md: $box-shadow-md-pink,
        pink-lg: $box-shadow-lg-pink,
        red: $box-shadow-red,
        red-sm: $box-shadow-sm-red,
        red-md: $box-shadow-md-red,
        red-lg: $box-shadow-lg-red,
        orange: $box-shadow-orange,
        orange-sm: $box-shadow-sm-orange,
        orange-md: $box-shadow-md-orange,
        orange-lg: $box-shadow-lg-orange,
        yellow: $box-shadow-yellow,
        yellow-sm: $box-shadow-sm-yellow,
        yellow-md: $box-shadow-md-yellow,
        yellow-lg: $box-shadow-lg-yellow,
        green: $box-shadow-green,
        green-sm: $box-shadow-sm-green,
        green-md: $box-shadow-md-green,
        green-lg: $box-shadow-lg-green,
        teal: $box-shadow-teal,
        teal-sm: $box-shadow-sm-teal,
        teal-md: $box-shadow-md-teal,
        teal-lg: $box-shadow-lg-teal,
        cyan: $box-shadow-cyan,
        cyan-sm: $box-shadow-sm-cyan,
        cyan-md: $box-shadow-md-cyan,
        cyan-lg: $box-shadow-lg-cyan,
        none: none,
      )
    ),
    // scss-docs-end utils-shadow
    // scss-docs-start utils-position
    "position": (
      responsive: true,
      property: position,
      values: static relative absolute fixed sticky
    ),
    "top": (
      responsive: true,
      property: top,
      values: $position-values
    ),
    "bottom": (
      responsive: true,
      property: bottom,
      values: $position-values
    ),
    "start": (
      responsive: true,
      property: left,
      class: start,
      values: $position-values
    ),
    "end": (
      responsive: true,
      property: right,
      class: end,
      values: $position-values
    ),
    "translate-middle": (
      property: transform,
      class: translate-middle,
      values: (
        null: translate(-50%, -50%),
        x: translateX(-50%),
        y: translateY(-50%),
      )
    ),
    // scss-docs-end utils-position
    // scss-docs-start utils-borders
    "border": (
      responsive: true,
      property: border,
      values: (
        null: var(--#{$prefix}border-width) var(--#{$prefix}border-style) var(--#{$prefix}border-color),
        0: 0,
      )
    ),
    "border-top": (
      responsive: true,
      property: border-top,
      values: (
        null: var(--#{$prefix}border-width) var(--#{$prefix}border-style) var(--#{$prefix}border-color),
        0: 0,
      )
    ),
    "border-end": (
      responsive: true,
      property: border-right,
      class: border-end,
      values: (
        null: var(--#{$prefix}border-width) var(--#{$prefix}border-style) var(--#{$prefix}border-color),
        0: 0,
      )
    ),
    "border-bottom": (
      responsive: true,
      property: border-bottom,
      values: (
        null: var(--#{$prefix}border-width) var(--#{$prefix}border-style) var(--#{$prefix}border-color),
        0: 0,
      )
    ),
    "border-start": (
      responsive: true,
      property: border-left,
      class: border-start,
      values: (
        null: var(--#{$prefix}border-width) var(--#{$prefix}border-style) var(--#{$prefix}border-color),
        0: 0,
      )
    ),
    "border-color": (
      property: border-color,
      class: border,
      local-vars: (
        "border-opacity": 1
      ),
      values: $utilities-border-colors
    ),
    "subtle-border-color": (
      property: border-color,
      class: border,
      values: $utilities-border-subtle
    ),
    "border-width": (
      css-var: true,
      css-variable-name: border-width,
      class: border,
      values: $border-widths
    ),
    "border-opacity": (
      css-var: true,
      class: border-opacity,
      values: (
        10: .1,
        25: .25,
        50: .5,
        75: .75,
        100: 1
      )
    ),
    // scss-docs-end utils-borders
    // Sizing utilities
    // scss-docs-start utils-sizing
    "width": (
      responsive: true,
      property: width,
      class: w,
      values: (
        25: 25%,
        50: 50%,
        75: 75%,
        100: 100%,
        auto: auto
      )
    ),
    "max-width": (
      responsive: true,
      property: max-width,
      class: mw,
      values: (100: 100%)
    ),
    "viewport-width": (
      responsive: true,
      property: width,
      class: vw,
      values: (100: 100vw)
    ),
    "min-viewport-width": (
      responsive: true,
      property: min-width,
      class: min-vw,
      values: (100: 100vw)
    ),
    "height": (
      responsive: true,
      property: height,
      class: h,
      values: (
        25: 25%,
        50: 50%,
        75: 75%,
        100: 100%,
        auto: auto
      )
    ),
    "max-height": (
      responsive: true,
      property: max-height,
      class: mh,
      values: (100: 100%)
    ),
    "viewport-height": (
      responsive: true,
      property: height,
      class: vh,
      values: (100: 100vh)
    ),
    "min-viewport-height": (
      responsive: true,
      property: min-height,
      class: min-vh,
      values: (100: 100vh)
    ),
    // scss-docs-end utils-sizing
    // Flex utilities
    // scss-docs-start utils-flex
    "flex": (
      responsive: true,
      property: flex,
      values: (fill: 1 1 auto)
    ),
    "flex-direction": (
      responsive: true,
      property: flex-direction,
      class: flex,
      values: row column row-reverse column-reverse
    ),
    "flex-grow": (
      responsive: true,
      property: flex-grow,
      class: flex,
      values: (
        grow-0: 0,
        grow-1: 1,
      )
    ),
    "flex-shrink": (
      responsive: true,
      property: flex-shrink,
      class: flex,
      values: (
        shrink-0: 0,
        shrink-1: 1,
      )
    ),
    "flex-wrap": (
      responsive: true,
      property: flex-wrap,
      class: flex,
      values: wrap nowrap wrap-reverse
    ),
    "justify-content": (
      responsive: true,
      property: justify-content,
      values: (
        start: flex-start,
        end: flex-end,
        center: center,
        between: space-between,
        around: space-around,
        evenly: space-evenly,
      )
    ),
    "align-items": (
      responsive: true,
      property: align-items,
      values: (
        start: flex-start,
        end: flex-end,
        center: center,
        baseline: baseline,
        stretch: stretch,
      )
    ),
    "align-content": (
      responsive: true,
      property: align-content,
      values: (
        start: flex-start,
        end: flex-end,
        center: center,
        between: space-between,
        around: space-around,
        stretch: stretch,
      )
    ),
    "align-self": (
      responsive: true,
      property: align-self,
      values: (
        auto: auto,
        start: flex-start,
        end: flex-end,
        center: center,
        baseline: baseline,
        stretch: stretch,
      )
    ),
    "order": (
      responsive: true,
      property: order,
      values: (
        first: -1,
        0: 0,
        1: 1,
        2: 2,
        3: 3,
        4: 4,
        5: 5,
        last: 6,
      ),
    ),
    // scss-docs-end utils-flex
    // Margin utilities
    // scss-docs-start utils-spacing
    "margin": (
      responsive: true,
      property: margin,
      class: m,
      values: map-merge($spacers, (auto: auto))
    ),
    "margin-x": (
      responsive: true,
      property: margin-right margin-left,
      class: mx,
      values: map-merge($spacers, (auto: auto))
    ),
    "margin-y": (
      responsive: true,
      property: margin-top margin-bottom,
      class: my,
      values: map-merge($spacers, (auto: auto))
    ),
    "margin-top": (
      responsive: true,
      property: margin-top,
      class: mt,
      values: map-merge($spacers, (auto: auto))
    ),
    "margin-end": (
      responsive: true,
      property: margin-right,
      class: me,
      values: map-merge($spacers, (auto: auto))
    ),
    "margin-bottom": (
      responsive: true,
      property: margin-bottom,
      class: mb,
      values: map-merge($spacers, (auto: auto))
    ),
    "margin-start": (
      responsive: true,
      property: margin-left,
      class: ms,
      values: map-merge($spacers, (auto: auto))
    ),
    // Negative margin utilities
    "negative-margin": (
      responsive: true,
      property: margin,
      class: m,
      values: $negative-spacers
    ),
    "negative-margin-x": (
      responsive: true,
      property: margin-right margin-left,
      class: mx,
      values: $negative-spacers
    ),
    "negative-margin-y": (
      responsive: true,
      property: margin-top margin-bottom,
      class: my,
      values: $negative-spacers
    ),
    "negative-margin-top": (
      responsive: true,
      property: margin-top,
      class: mt,
      values: $negative-spacers
    ),
    "negative-margin-end": (
      responsive: true,
      property: margin-right,
      class: me,
      values: $negative-spacers
    ),
    "negative-margin-bottom": (
      responsive: true,
      property: margin-bottom,
      class: mb,
      values: $negative-spacers
    ),
    "negative-margin-start": (
      responsive: true,
      property: margin-left,
      class: ms,
      values: $negative-spacers
    ),
    // Padding utilities
    "padding": (
      responsive: true,
      property: padding,
      class: p,
      values: $spacers
    ),
    "padding-x": (
      responsive: true,
      property: padding-right padding-left,
      class: px,
      values: $spacers
    ),
    "padding-y": (
      responsive: true,
      property: padding-top padding-bottom,
      class: py,
      values: $spacers
    ),
    "padding-top": (
      responsive: true,
      property: padding-top,
      class: pt,
      values: $spacers
    ),
    "padding-end": (
      responsive: true,
      property: padding-right,
      class: pe,
      values: $spacers
    ),
    "padding-bottom": (
      responsive: true,
      property: padding-bottom,
      class: pb,
      values: $spacers
    ),
    "padding-start": (
      responsive: true,
      property: padding-left,
      class: ps,
      values: $spacers
    ),
    // Gap utility
    "gap": (
      responsive: true,
      property: gap,
      class: gap,
      values: $spacers
    ),
    "row-gap": (
      responsive: true,
      property: row-gap,
      class: row-gap,
      values: $spacers
    ),
    "column-gap": (
      responsive: true,
      property: column-gap,
      class: column-gap,
      values: $spacers
    ),
    // scss-docs-end utils-spacing
    // Text
    // scss-docs-start utils-text
    "font-family": (
      property: font-family,
      class: font,
      values: (monospace: var(--#{$prefix}font-monospace))
    ),
    "font-size": (
      responsive: true,
      rfs: true,
      property: font-size,
      class: fs,
      values: $font-sizes
    ),
    "font-style": (
      responsive: true,
      property: font-style,
      class: fst,
      values: italic normal
    ),
    "font-weight": (
      responsive: true,
      property: font-weight,
      class: fw,
      values: (
        lighter: $font-weight-lighter,
        light: $font-weight-light,
        normal: $font-weight-normal,
        medium: $font-weight-medium,
        semibold: $font-weight-semibold,
        bold: $font-weight-bold,
        bolder: $font-weight-bolder
      )
    ),
    "line-height": (
      responsive: true,
      property: line-height,
      class: lh,
      values: (
        1: 1,
        sm: $line-height-sm,
        base: $line-height-base,
        lg: $line-height-lg,
      )
    ),
    "text-align": (
      responsive: true,
      property: text-align,
      class: text,
      values: (
        start: left,
        end: right,
        center: center,
      )
    ),
    "text-decoration": (
      responsive: true,
      property: text-decoration,
      values: none underline line-through
    ),
    "text-transform": (
      responsive: true,
      property: text-transform,
      class: text,
      values: lowercase uppercase capitalize
    ),
    "white-space": (
      responsive: true,
      property: white-space,
      class: text,
      values: (
        wrap: normal,
        nowrap: nowrap,
      )
    ),
    "word-wrap": (
      responsive: true,
      property: word-wrap word-break,
      class: text,
      values: (break: break-word),
      rtl: false
    ),
    // scss-docs-end utils-text
    // scss-docs-start utils-color
    "color": (
      property: color,
      class: text,
      local-vars: (
        "text-opacity": 1
      ),
      values: map-merge(
        $utilities-text-colors,
        (
          "muted": $text-muted, // deprecated
          "black-50": rgba($black, .5), // deprecated
          "white-50": rgba($white, .5), // deprecated
          "body-secondary": var(--#{$prefix}secondary-color),
          "body-tertiary": var(--#{$prefix}tertiary-color),
          "body-emphasis": var(--#{$prefix}emphasis-color),
          "reset": inherit,
        )
      )
    ),
    "text-opacity": (
      responsive: true,
      css-var: true,
      class: text-opacity,
      values: (
        25: .25,
        50: .5,
        75: .75,
        100: 1
      )
    ),
    "text-color": (
      property: color,
      class: text,
      values: $utilities-text-emphasis-colors
    ),
    // scss-docs-end utils-color
    // scss-docs-start utils-bg-color
    "background-color": (
      property: background-color,
      class: bg,
      local-vars: (
        "bg-opacity": 1
      ),
      values: map-merge(
        $utilities-bg-colors,
        (
          "transparent": transparent,
          "body-secondary": rgba(var(--#{$prefix}secondary-bg-rgb), var(--#{$prefix}bg-opacity)),
          "body-tertiary": rgba(var(--#{$prefix}tertiary-bg-rgb), var(--#{$prefix}bg-opacity)),
          "body-emphasis": rgba(var(--#{$prefix}emphasis-bg-rgb), var(--#{$prefix}bg-opacity)),
        )
      )
    ),
    "bg-opacity": (
      css-var: true,
      class: bg-opacity,
      values: (
        10: .1,
        25: .25,
        50: .5,
        75: .75,
        100: 1
      )
    ),
    "subtle-background-color": (
      property: background-color,
      class: bg,
      values: $utilities-bg-subtle
    ),
    // scss-docs-end utils-bg-color
    "gradient": (
      property: background-image,
      class: bg,
      values: (gradient: var(--#{$prefix}gradient))
    ),
    // scss-docs-start utils-interaction
    "user-select": (
      responsive: true,
      property: user-select,
      values: all auto none
    ),
    "pointer-events": (
      responsive: true,
      property: pointer-events,
      class: pe,
      values: none auto,
    ),
    // scss-docs-end utils-interaction
    // scss-docs-start utils-border-radius
    "rounded": (
      responsive: true,
      property: border-radius,
      class: rounded,
      values: (
        null: var(--#{$prefix}border-radius),
        0: 0,
        1: var(--#{$prefix}border-radius-sm),
        2: var(--#{$prefix}border-radius),
        3: var(--#{$prefix}border-radius-lg),
        4: var(--#{$prefix}border-radius-xl),
        5: var(--#{$prefix}border-radius-2xl),
        circle: 50%,
        pill: var(--#{$prefix}border-radius-pill)
      )
    ),
    "rounded-top": (
      responsive: true,
      property: border-top-left-radius border-top-right-radius,
      class: rounded-top,
      values: (
        null: var(--#{$prefix}border-radius),
        0: 0,
        1: var(--#{$prefix}border-radius-sm),
        2: var(--#{$prefix}border-radius),
        3: var(--#{$prefix}border-radius-lg),
        4: var(--#{$prefix}border-radius-xl),
        5: var(--#{$prefix}border-radius-2xl),
        circle: 50%,
        pill: var(--#{$prefix}border-radius-pill)
      )
    ),
    "rounded-end": (
      responsive: true,
      property: border-top-right-radius border-bottom-right-radius,
      class: rounded-end,
      values: (
        null: var(--#{$prefix}border-radius),
        0: 0,
        1: var(--#{$prefix}border-radius-sm),
        2: var(--#{$prefix}border-radius),
        3: var(--#{$prefix}border-radius-lg),
        4: var(--#{$prefix}border-radius-xl),
        5: var(--#{$prefix}border-radius-2xl),
        circle: 50%,
        pill: var(--#{$prefix}border-radius-pill)
      )
    ),
    "rounded-bottom": (
      responsive: true,
      property: border-bottom-right-radius border-bottom-left-radius,
      class: rounded-bottom,
      values: (
        null: var(--#{$prefix}border-radius),
        0: 0,
        1: var(--#{$prefix}border-radius-sm),
        2: var(--#{$prefix}border-radius),
        3: var(--#{$prefix}border-radius-lg),
        4: var(--#{$prefix}border-radius-xl),
        5: var(--#{$prefix}border-radius-2xl),
        circle: 50%,
        pill: var(--#{$prefix}border-radius-pill)
      )
    ),
    "rounded-start": (
      responsive: true,
      property: border-bottom-left-radius border-top-left-radius,
      class: rounded-start,
      values: (
        null: var(--#{$prefix}border-radius),
        0: 0,
        1: var(--#{$prefix}border-radius-sm),
        2: var(--#{$prefix}border-radius),
        3: var(--#{$prefix}border-radius-lg),
        4: var(--#{$prefix}border-radius-xl),
        5: var(--#{$prefix}border-radius-2xl),
        circle: 50%,
        pill: var(--#{$prefix}border-radius-pill)
      )
    ),
    // scss-docs-end utils-border-radius
    // scss-docs-start utils-visibility
    "visibility": (
      responsive: true,
      property: visibility,
      class: null,
      values: (
        visible: visible,
        invisible: hidden,
      )
    ),
    // scss-docs-end utils-visibility
    "z-index": (
      responsive: true,
      property: z-index,
      class: z,
      values: $zindex-levels,
    ),
    "cursor": (
      responsive: true,
      property: cursor,
      class: cursor,
      values: (
        alias: alias,
        all-scroll: all-scroll,
        auto: auto,
        cell: cell,
        col-resize: col-resize,
        context-menu: context-menu,
        copy: copy,
        crosshair: crosshair,
        default: default,
        e-resize: e-resize,
        ew-resize: ew-resize,
        grab: grab,
        grabbing: grabbing,
        help: help,
        move: move,
        n-resize: n-resize,
        ne-resize: ne-resize,
        nesw-resize: nesw-resize,
        ns-resize: ns-resize,
        nw-resize: nw-resize,
        nwse-resize: nwse-resize,
        no-drop: no-drop,
        none: none,
        not-allowed: not-allowed,
        pointer: pointer,
        progress: progress,
        row-resize: row-resize,
        s-resize: s-resize,
        se-resize: se-resize,
        sw-resize: sw-resize,
        text: text,
        url: url,
        w-resize: w-resize,
        wait: wait,
        zoom-in: zoom-in,
        zoom-out: zoom-out,
      )
    ),
    "icon-width": (
    property: width,
    class: #{$prefix}img,
    responsive: true,
    values: (
            "8": 8px,
            "10": 10px,
            "12": 12px,
            "14": 14px,
            "16": 16px,
            "18": 18px,
            "20": 20px,
            "22": 22px,
            "24": 24px,
            "28": 28px,
            "30": 30px,
            "32": 32px,
            "40": 40px,
            "48": 48px,
            "56": 56px,
            "64": 64px,
            "72": 72px,
            "80": 80px,
            "88": 88px,
            "96": 96px,
            "128": 128px,
            "175": 175px,
            "256": 256px,
            "512": 512px,
        ),
    ),
  ),
  $utilities
);
